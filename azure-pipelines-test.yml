# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
variables:
#  imageName: $(Build.Repository.Name)
  imageName: 'bliart-incoming'
  imageTag: $(Build.BuildId)

trigger:
- bli_test

pool:
  vmImage: 'ubuntu-18.04'

#steps:
#- task: NodeTool@0
#  inputs:
#    versionSpec: '10.x'
#  displayName: 'Install Node.js'

#- script: |
#    npm install
#    npm run build
#  displayName: 'npm install and build'

#- task: Docker@2
#  inputs:
#    command: 'buildAndPush'
#    Dockerfile: '**/Dockerfile'

steps:
  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: ServiceConnectionAzureTest
  - script: docker build -t $(imageName) 
      --build-arg PORT=$(PORT) 
      --build-arg APIC_HOSTNAME=$(APIC_HOSTNAME) 
      --build-arg TZ=$(TZ)
      --build-arg NODE_ENV=$(NODE_ENV)
      --build-arg CRYPTO_KEY=$(CRYPTO_KEY)
      --build-arg CRYPTO_IV=$(CRYPTO_IV)
      --build-arg ARTAJASA_USERNAME=$(ARTAJASA_USERNAME) 
      --build-arg ARTAJASA_PASSWORD=$(ARTAJASA_PASSWORD) 
      --build-arg APP_TIMEOUT=$(APP_TIMEOUT) 
      --build-arg APIC_TOKEN_HOSTNAME=$(APIC_TOKEN_HOSTNAME) .
    displayName: Docker Build
  - script: docker tag $(imageName) $(BLI_ACR).azurecr.io/$(imageName):$(imageTag)
    displayName: Tag docker by ID
  - script: docker tag $(imageName) $(BLI_ACR).azurecr.io/$(imageName):latest
    displayName: Tag docker latest
  - task: Docker@2
    displayName: docker push
    inputs:
        containerRegistry: ServiceConnectionAzureTest
        command: push
        repository: $(imageName)
        tags: |
          $(imageTag)
          latest